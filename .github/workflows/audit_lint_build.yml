name: SynthScan CI

on:
  push:
  pull_request:
    branches: [main, dev]

jobs:
  audit:
    # run only on main/dev branch and pull requests
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-sec-tools/base:14.17
      options: --shm-size=7gb
      # image: ghcr.io/synthetixio/docker-sec-tools/alpine:14.17
      # credentials:
      #   username: synthetixio
      #   password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

      - name: Audit dependencies
        run: audit-ci --critical

      - name: Lockfile lint
        run: lockfile-lint -p yarn.lock --type yarn --allowed-hosts yarn github.com --allowed-schemes "https:" "git+https:"

  build:
    needs: audit
    # run only on audit success or audit skipped
    if: always() && (needs.audit.result == 'success' || needs.audit.result == 'skipped')
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-node/alpine:14.17
      options: --shm-size=7gb
      # credentials:
      #   username: synthetixio
      #   password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        continue-on-error: true

      - uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        continue-on-error: true

      - name: Install dependencies
        run: yarn --prefer-offline
        env:
          NODE_OPTIONS: --max_old_space_size=7168

      - name: Lint
        # run only on main/dev branch and pull requests
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
        run: yarn lint:sarif

      - name: Upload lint results
        # run if lint failed and only on main/dev branch and pull requests
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request')
        uses: github/codeql-action/upload-sarif@db7158f9ba305f7f7294527cd69cfa3bc28d9867 # pin@codeql-bundle-20210517
        with:
          sarif_file: lint-results.sarif
        continue-on-error: true

      - name: Build
        run: yarn build
        env:
          NODE_OPTIONS: --max_old_space_size=7168

      - name: Compress build
        run: tar -zcvf build.tar.gz build

      - name: Archive build
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # pin@v2
        with:
          name: build
          path: build.tar.gz

  e2e:
    needs: build
    # run only on main branch
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/synthetixio/docker-e2e/base:14.17
      options: --shm-size=7gb
      # credentials:
      #   username: synthetixio
      #   password: ${{ secrets.GH_PACKAGES_READ_ONLY }}

    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        continue-on-error: true

      - uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # pin@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-e2e-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-e2e-
        continue-on-error: true

      - name: Install dependencies
        run: yarn --prefer-offline
        env:
          NODE_OPTIONS: --max_old_space_size=7168
          CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Download build
        uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # pin@v2
        with:
          name: build

      - name: Extract build
        run: tar -xf build.tar.gz

      - name: Run e2e tests
        run: yarn test:e2e:ci
        env:
          NODE_OPTIONS: --max_old_space_size=7168
          BASE_URL: ${{ secrets.BASE_URL }}
          SECRET_WORDS: ${{ secrets.SECRET_WORDS }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          NETWORK_NAME: ${{ secrets.NETWORK_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/node_modules/.cache/Cypress

      - name: Archive e2e artifacts
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # pin@v2
        if: always()
        with:
          name: e2e-artifacts
          path: |
            tests/e2e/videos
            tests/e2e/screenshots
        continue-on-error: true
